// Array containing the digital pins where the LEDs are connected
const int leds[] = {3, 6, 9};

// Variable to store which LED was last turned on (-1 = none yet)
int letzteLED = -1;

// Counter to track how many times the same LED has been selected consecutively
int zaehler = 0;

void setup() {
  // Initialize the random number generator using analog noise from pin A0
  randomSeed(analogRead(A0));

  // Set each LED pin as an OUTPUT
  for (int i = 0; i < 3; i++) pinMode(leds[i], OUTPUT);
}

void loop() {
  // Determine which LED to activate next:
  // - If the same LED has been selected 3 or more times in a row,
  //   a more complex random logic is used to reduce repetition.
  // - Otherwise, a simple random selection from 0 to 2 is made.
  // NOTE: This logic is compact but somewhat hard to read and could lead to uneven probability distribution.
  int led = (zaehler >= 3) ? (random(0, 3 - (letzteLED == 2)) + (letzteLED == 0)) : random(0, 3);

  // Check if the same LED was selected again:
  // - If yes, increment the repetition counter.
  // - If not, reset the counter and update the "last LED" tracker.
  if (led == letzteLED) zaehler++; else { letzteLED = led; zaehler = 1; }

  // Generate random ON and OFF times (in milliseconds)
  // Range is 100â€“125 ms, which produces only slight visual variation.
  int onTime = random(100, 125);
  int offTime = random(100, 125);

  // Turn the selected LED ON
  digitalWrite(leds[led], HIGH);
  // Wait for the randomly generated ON duration
  delay(onTime);

  // Turn the same LED OFF
  digitalWrite(leds[led], LOW);
  // Wait for the randomly generated OFF duration
  delay(offTime);
}
